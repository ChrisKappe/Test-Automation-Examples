OBJECT Codeunit 75651 Unblock Deletion Disabled FLX
{
  OBJECT-PROPERTIES
  {
    Date=23-03-20;
    Time=01:00:00;
    Version List=FLX1.0.0;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            // [FEATURE] Unblock Deletion of Whse. Shpt. Line disabled
          END;

  }
  CODE
  {
    VAR
      Assert@1000000000 : Codeunit 130000;
      LibrarySales@1000000001 : Codeunit 130509;
      LibraryWarehouse@1000000002 : Codeunit 132204;
      LibraryUnblockDeletion@1000000005 : Codeunit 75659;
      IsInitialized@1000000003 : Boolean;
      LocationCode@1000000004 : Code[10];
      DeleteThisSystemCreatedLineQst@1000000006 : TextConst 'ENU=Are you sure you want to delete this system-created line?';

    [Test]
    PROCEDURE DeleteByUserWithNoAllowanceManuallyCreatedWhseShptLine@1000000001();
    VAR
      WarehouseShipmentNo@1000000001 : Code[20];
    BEGIN
      // [SCENARIO #0005] Delete by user with no allowance manually created whse. shpt. line
      Initialize;

      // [GIVEN] Warehouse employee for current user with no allowance
      CreateWarehouseEmployeeForCurrentUser(NoAllowance,LocationCode);
      // [GIVEN] Manually created warehouse shipment from released sales order with one line with require shipment location
      WarehouseShipmentNo := CreateManuallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode);

      // [WHEN] Delete warehouse shipment line
      DeleteWarehouseShipmentLine(WarehouseShipmentNo);

      // [THEN] Warehouse shipment line is deleted
      VerifyWarehouseShipmentLineIsDeleted(WarehouseShipmentNo);
    END;

    [Test]
    PROCEDURE DeleteByUserWithNoAllowanceAutomaticallyCreatedWhseShptLine@1000000002();
    VAR
      WarehouseShipmentNo@1000000000 : Code[20];
    BEGIN
      // [SCENARIO #0006] Delete by user with no allowance automatically created whse. shpt. line
      Initialize;

      // [GIVEN] Warehouse employee for current user with no allowance
      CreateWarehouseEmployeeForCurrentUser(NoAllowance,LocationCode);
      // [GIVEN] Automatically created warehouse shipment from released sales order with one line with require shipment location
      WarehouseShipmentNo := CreateAutomaticallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode);

      // [WHEN] Delete warehouse shipment line
      ASSERTERROR DeleteWarehouseShipmentLine(WarehouseShipmentNo);

      // [THEN] Error disallowing deletion
      VerifyErrorDisallowingDeletion;
    END;

    [Test]
    PROCEDURE DeleteByUserWithAllowanceManuallyCreatedWhseShptLine@1000000012();
    VAR
      WarehouseShipmentNo@1000000000 : Code[20];
    BEGIN
      // [SCENARIO #0007] Delete by user with allowance manually created whse. shpt. line
      Initialize;

      // [GIVEN] Warehouse employee for current user with allowance
      CreateWarehouseEmployeeForCurrentUser(WithAllowance(), LocationCode);
      // [GIVEN] Manually created warehouse shipment from released sales order with one line with require shipment location
      WarehouseShipmentNo := CreateManuallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode);

      // [WHEN] Delete warehouse shipment line
      DeleteWarehouseShipmentLine(WarehouseShipmentNo);

      // [THEN] Warehouse shipment line is deleted
      VerifyWarehouseShipmentLineIsDeleted(WarehouseShipmentNo);
    END;

    [Test]
    [HandlerFunctions(ConfirmHandlerYes)]
    PROCEDURE DeleteByUserWithAllowanceAutomaticallyCreatedWhseShptLineWithConfirmation@1000000023();
    VAR
      WarehouseShipmentNo@1000000000 : Code[20];
    BEGIN
      // [SCENARIO #0008] Delete by user with allowance automatically created whse. shpt. line with confirmation
      Initialize;

      // [GIVEN] Warehouse employee for current user with allowance
      CreateWarehouseEmployeeForCurrentUser(WithAllowance(), LocationCode);
      // [GIVEN] Automatically created warehouse shipment from released sales order with one line with require shipment location
      WarehouseShipmentNo := CreateAutomaticallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode);

      // [WHEN] Delete warehouse shipment line and select yes in confirmation
      //        Confirm handled by ConfirmHandlerYes
      DeleteWarehouseShipmentLine(WarehouseShipmentNo);

      // [THEN] Warehouse shipment line is deleted
      VerifyWarehouseShipmentLineIsDeleted(WarehouseShipmentNo);
    END;

    [Test]
    [HandlerFunctions(ConfirmHandlerNo)]
    PROCEDURE DeleteByUserWithAllowanceAutomaticallyCreatedWhseShptLineWithNoConfirmation@1000000013();
    VAR
      WarehouseShipmentNo@1000000000 : Code[20];
    BEGIN
      // [SCENARIO #0011] Delete by user with allowance automatically created whse. shpt. line with no confirmation
      Initialize;

      // [GIVEN] Warehouse employee for current user with allowance
      CreateWarehouseEmployeeForCurrentUser(WithAllowance(), LocationCode);
      // [GIVEN] Automatically created warehouse shipment from released sales order with one line with require shipment location
      WarehouseShipmentNo := CreateAutomaticallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode);

      // [WHEN] Delete warehouse shipment line and select no in confirm
      //        Confirm handled by ConfirmHandlerNo
      ASSERTERROR DeleteWarehouseShipmentLine(WarehouseShipmentNo);

      // [THEN] Empty error occurred
      VerifyEmptyErrorOccurred();
    END;

    [Test]
    PROCEDURE AllowedToDeleteShptLineIsEditableOnWarehouseEmployeesPage@1000000014();
    BEGIN
      // [SCENARIO #00010] "Allowed to Delete Shpt. Line" is editable on warehouse employees page
      Initialize;

      // [GIVEN] Warehouse employee for current user
      CreateWarehouseEmployeeForCurrentUser(NoAllowance(), LocationCode);

      // [WHEN] Disable "Unblock Deletion of Shpt. Line" on warehouse setup
      DisableUnblockDeletionOfShptLineOnWarehouseSetup;

      // [THEN] Allowed to Delete Shpt. Line is editable on warehouse employees page
      VerifyAllowedToDeleteShptLineIsEditableOnWarehouseEmployeesPage(LocationCode);
    END;

    LOCAL PROCEDURE Initialize@1000000000();
    VAR
      LibraryTestInitialize@1000000000 : Codeunit 132250;
    BEGIN
      LibraryTestInitialize.OnTestInitialize(CODEUNIT::"Unblock Deletion Enabled FLX");

      IF IsInitialized THEN
        EXIT;

      LibraryTestInitialize.OnBeforeTestSuiteInitialize(CODEUNIT::"Unblock Deletion Enabled FLX");

      // [GIVEN] Enable "Unblock Deletion of Shpt. Line" on warehouse setup
      DisableUnblockDeletionOfShptLineOnWarehouseSetup();
      // [GIVEN] Location with require shipment
      LocationCode := CreateLocationWithRequireShipment();

      IsInitialized := TRUE;
      COMMIT;

      LibraryTestInitialize.OnAfterTestSuiteInitialize(CODEUNIT::"Unblock Deletion Enabled FLX");
    END;

    LOCAL PROCEDURE DisableUnblockDeletionOfShptLineOnWarehouseSetup@1000000003();
    BEGIN
      LibraryUnblockDeletion.SetUnblockDeletionOfShptLineOnWarehouseSetup(FALSE);
    END;

    LOCAL PROCEDURE CreateLocationWithRequireShipment@1000000004() : Code[10];
    BEGIN
      EXIT(LibraryUnblockDeletion.CreateLocationWithRequireShipment);
    END;

    LOCAL PROCEDURE CreateWarehouseEmployeeForCurrentUser@1000000005(WithAllowance@1000000002 : Boolean;LocationCode@1000000000 : Code[10]);
    BEGIN
      LibraryUnblockDeletion.CreateWarehouseEmployeeForCurrentUser(WithAllowance, LocationCode);
    END;

    LOCAL PROCEDURE CreateManuallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation@1000000006(LocationCode@1000000000 : Code[10]) : Code[20];
    BEGIN
      EXIT(LibraryUnblockDeletion.CreateManuallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode));
    END;

    LOCAL PROCEDURE CreateAutomaticallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation@1000000009(LocationCode@1000000000 : Code[10]) : Code[20];
    BEGIN
      EXIT(LibraryUnblockDeletion.CreateAutomaticallyCreatedWarehouseShipmentFromReleasedSalesOrderWithOneLineWithRequireShipmentLocation(LocationCode));
    END;

    LOCAL PROCEDURE DeleteWarehouseShipmentLine@1000000007(WarehouseShipmentNo@1000000001 : Code[20]);
    BEGIN
      LibraryUnblockDeletion.DeleteWarehouseShipmentLine(WarehouseShipmentNo)
    END;

    LOCAL PROCEDURE VerifyWarehouseShipmentLineIsDeleted@1000000008(WarehouseShipmentNo@1000000000 : Code[20]);
    BEGIN
      LibraryUnblockDeletion.VerifyWarehouseShipmentLineIsDeleted(WarehouseShipmentNo);
    END;

    LOCAL PROCEDURE VerifyErrorDisallowingDeletion@1000000030();
    BEGIN
        LibraryUnblockDeletion.VerifyErrorDisallowingDeletion();
    END;

    LOCAL PROCEDURE VerifyEmptyErrorOccurred@1000000031();
    BEGIN
        Assert.ExpectedError('');
    END;

    LOCAL PROCEDURE VerifyAllowedToDeleteShptLineIsEditableOnWarehouseEmployeesPage@1000000017(LocationCode@1000000000 : Code[10]);
    BEGIN
      LibraryUnblockDeletion.VerifyAllowedToDeleteShptLineOnWarehouseEmployeesPage(TRUE, LocationCode);
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmHandlerYes@1000000025(Qst@1000000026 : Text;VAR Reply@1000000027 : Boolean);
    BEGIN
      Assert.AreEqual(DeleteThisSystemCreatedLineQst, Qst, '');
      Reply := TRUE;
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmHandlerNo@1000000028(Qst@1000000029 : Text;VAR Reply@1000000030 : Boolean);
    BEGIN
      Assert.AreEqual(DeleteThisSystemCreatedLineQst, Qst, '');
      Reply := FALSE;
    END;

    LOCAL PROCEDURE NoAllowance@1000000015() : Boolean;
    BEGIN
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE WithAllowance@1000000016() : Boolean;
    BEGIN
      EXIT(TRUE)
    END;

    BEGIN
    END.
  }
}

